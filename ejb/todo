# VITAFOAM 

## CONCEPTION

- InitialSponge
    . purchase price
    . date creation
    . is transformed `DEFAULT FALSE`
    . dimension (in meters)
        . length
        . width
        . height

- Product
    . label
    . selling price
    . dimension
        . length
        . width
        . height

- SpongeTransformation
    . initial sponge [FK]
    . date transformation

- ProductTransformation 
    . sponge transformation [FK]
    . product [FK]
    . quantity

- RemainingTransformation
    . sponge transformation [FK]
    . initial sponge [FK]
        . Dimension remaining 
            . create initial sponge
            . update SpongeTransformation.initial_sponge.is_transformed = `TRUE`

            
### Form sponge insertion
- purchase price (numeric)
- date creation (date)
- dimension
    . length (numeric)
    . width (numeric)
    . height (numeric)

### Form product insertion
- label (string)
- selling price (numeric)
- dimension
    . length (numeric)
    . width (numeric)
    . height (numeric)

### Sponge Transformation
- initial sponge (select)
- date transformation (date)
- input qté product (numeric)
    . loop trough all product
- remaining 
    . dimension
        . length (numeric)
        . width (numeric)
        . height (numeric)

### Stock Status
- product 
    -> stock status 
        -> prix de revient
        -> prix de vente 

- total sum products transformed
    -> total 
        -> getSellingPrice * quantity
        -> sum per initial sponge

- total amount for the most profitable product 
    -> get most profitable product 
        -> get max(rapport price/volume)
    -> get remaining dimension for each initial sponge 
    -> transform each reamining to the most profitable product
        -> transform until remaining is empty 
    -> total amount by selling price
        -> per initial sponge
        -> total 
    -> Profit from each product
        -> get initial sponge
        -> get cost price by m^3
        -> profit = selling - cost

- total amount for the least bulky product
    -> get the least bulky product 
    -> get min(volume)
    -> get remaining dimension for each initial sponge 
    -> transform each reamining to the the least bulky product
        -> transform until remaining is empty 
    -> total amount by selling price
        -> per initial sponge
        -> total 
    -> Profit from each product
        -> get initial sponge
        -> get cost price by m^3
        -> profit = selling - cost

/* ============================== */
/* ============================== */
/* ============================== */

ALEA 1:
    Exemple:
        Block mere A
            . v = 100m3 
            . P_Revient = $200.000
            -> update P_Revient = 150.000$
            
            T1: 
                Reste Block Fille B
                    . v = 30m3
                    . P_Revient = (200.000*30)/100 = 60.000$
                    -> update automatic = (150.000*30)/100 = 45.000$

            T2:
                Reste Block Fille C
                    . v = 10
                    . P_Revient = (200.000*10)/30 = 20.000$
                    -> update automatic = (150.000*10)/30 = 15.000$

    
    + insert reste block fille 
            . P_Revient = (P_Revient.mere * blockfille.volume) / blockfille.volume
            
    + Recursion
        update P_Revient anah bloc mere
            - mila tedavina daoly ny block fille any rehetra 
                - get_source_block_fille
                    - prendre tous les block fille d'un bloc mere  
            - updatena ilay P_Revient any block fille rehetra 

ALEA 2:
    Tedavina ny block mere an'ny produit rehetra

/* ============================== */
/* ============================== */
/* ============================== */

## SUJET 2

** TABLE ** (DONE) 

+ Machine 
    . label

+ Unit
    . label

+ Bloc Initial 
    . date_creation ** ALTER **   
    . id_machine [FK] ** ALTER ** 

+ RawMateriel
    . label
    . id_unit

+ CubicMeterFormula
    . id_raw_materiel
    . qte

+ RawMaterielPurchase
    . id_raw_materiel
    . qte
    . date_purchase

** DONE **
- Prix de revient pratique d'une Machine
    . ALL_INITIAL_BLOCK(SUM(get_PR) / SUM(get_VOL)) +/- (10% random) * volume_block_fabriqué
    . initial block
        - B1 = 1.000.000$ / 250m3
        - B2 = 1.500.000$ / 175m3
        - B3 = 1.900.000$ / 225m3
        -> SUM_PR = 4.400.000$
        -> SUM_VOL = 650m3
    . random 
        4%
    . volume_block_fabriqué
        210m3
    => (4.400.000 / 650) + ((4.400.000 / 650) * 0.04) * 210 
    => 6769.23 + (6769.23 * 0.04) * 210
    => 6769.23 + 270,76 * 210 
    =>  1.478.400$


- Prix Revient Theorique d'une Machine
    . date fabrication
    . PU raw_materiel correlated with date_fabrication (inferieur)
        . SORT purchase_raw_materiel BY date_purchase ASC
        . FIFO
        . cursor with number of raw_materiel
    . using cubic meter formula 
        - 1m3 = (ALL(PU.raw_materiel * qte))
        - exemple:
            -> 1.5L essence (PU = 2.000)
                -> 1.5 * 2000
                -> 3000
            -> 3kg papier (PU = 500)
                -> 3 * 500
                -> 1500
            -> 0.5KG durcisseur (PU = 1500)
                -> 0.5 * 1500
                -> 750
            ==> 3000 + 1500 + 750 = 5.250$ 
            ==> 1m3 revient a 5.250$

            -> Bloc A 
                - 450m3
                -> PR Theorique: 450 * 5.250 = 2.362.500$


- Ecart Theorique et Pratique
    ecart = PR_pratique - PR_theorique

==> Manana ecart ny Machine rehetra 

-> ORDER BY ecart ASC
-> MOST EFFICIENT MACHINE => LIMIT 1